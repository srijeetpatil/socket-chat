{"version":3,"sources":["components/More.js","components/People.js"],"names":["More","props","version","id","xmlns","x","y","width","height","viewBox","style","cursor","marginLeft","onClick","cx","cy","r","useStyles","makeStyles","theme","typography","padding","spacing","avatar","backgroundColor","logout","removeCookie","window","location","reload","People","classes","useState","username","setUsername","password","setPassword","people","setPeople","anchorEl","setAnchorEl","open","Boolean","undefined","useEffect","a","getPeople","then","resolve","data","fetch","loginPressed","login","setCookie","token","signupPressed","signup","user","className","Avatar","charAt","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","updateChat","marginTop","chat","fontSize","map","person","fontWeight","placeholder","onChange","e","target","value","type"],"mappings":"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","file":"static/js/5.be763be3.chunk.js","sourcesContent":["export default function More(props) {\r\n  return (\r\n    <svg\r\n      version=\"1.1\"\r\n      id=\"Capa_1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      width=\"0.7rem\"\r\n      height=\"0.7rem\"\r\n      viewBox=\"0 0 384 384\"\r\n      style={{ cursor: \"pointer\", marginLeft: \"auto\" }}\r\n      onClick={props.onClick}\r\n    >\r\n      <g>\r\n        <g>\r\n          <circle cx=\"192\" cy=\"42.667\" r=\"42.667\" />\r\n        </g>\r\n      </g>\r\n      <g>\r\n        <g>\r\n          <circle cx=\"192\" cy=\"192\" r=\"42.667\" />\r\n        </g>\r\n      </g>\r\n      <g>\r\n        <g>\r\n          <circle cx=\"192\" cy=\"341.333\" r=\"42.667\" />\r\n        </g>\r\n      </g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n    </svg>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\nimport { setCookie, removeCookie } from \"../util/cookie\";\r\nimport { Avatar, Popover, Typography, makeStyles } from \"@material-ui/core\";\r\nimport { login, signup, getPeople } from \"../util/api\";\r\nimport More from \"./More\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n    cursor: \"pointer\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"orange\",\r\n  },\r\n}));\r\n\r\nconst logout = () => {\r\n  removeCookie(\"auth\");\r\n  window.location.reload();\r\n};\r\n\r\nfunction People(props) {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [people, setPeople] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"logout-popover\" : undefined;\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      await getPeople().then((resolve) => {\r\n        setPeople(resolve.data.people);\r\n      });\r\n    };\r\n    fetch();\r\n  }, []);\r\n\r\n  const loginPressed = async (username, password) => {\r\n    if (username && password) {\r\n      await login(username, password).then((resolve) => {\r\n        setCookie(\"auth\", resolve.data.token, 5);\r\n        window.location.reload();\r\n      });\r\n    }\r\n  };\r\n\r\n  const signupPressed = async (username, password) => {\r\n    if (username && password) {\r\n      await signup(username, password).then((resolve) => {\r\n        setCookie(\"auth\", resolve.data.token, 5);\r\n        window.location.reload();\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.user ? (\r\n        <div>\r\n          <div className=\"userPanel\">\r\n            <Avatar>{props.user.charAt(0)}</Avatar>\r\n            <label className=\"userLabel\">{props.user}</label>\r\n            <More onClick={handleClick} />\r\n            <Popover\r\n              id={id}\r\n              open={open}\r\n              anchorEl={anchorEl}\r\n              onClose={handleClose}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"center\",\r\n              }}\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"center\",\r\n              }}\r\n            >\r\n              <Typography className={classes.typography} onClick={logout}>\r\n                Log out\r\n              </Typography>\r\n            </Popover>\r\n          </div>\r\n          {\r\n            <div\r\n              className=\"person\"\r\n              onClick={() => props.updateChat(\"Global\")}\r\n              style={{\r\n                marginTop: \"2rem\",\r\n                backgroundColor: props.chat === \"Global\" ? \"#F5F5F5\" : \"white\",\r\n              }}\r\n            >\r\n              <Avatar className={classes.avatar}>G</Avatar>\r\n              <div>\r\n                <label className=\"userLabel\">Global</label>\r\n                <p style={{ fontSize: \"12px\", marginLeft: \"1rem\" }}>\r\n                  Click here to view Global messages\r\n                </p>\r\n              </div>\r\n            </div>\r\n          }\r\n          <div className=\"contacts\">\r\n            {people.map((person) => {\r\n              const personClicked = () => {                \r\n                props.updateChat(person.username);\r\n              };\r\n              var backgroundColor;\r\n              if (props.chat === person.username) backgroundColor = \"#F5F5F5\";\r\n              return (\r\n                <div\r\n                  className=\"person\"\r\n                  key={person.username}\r\n                  onClick={personClicked}\r\n                  style={{ backgroundColor: backgroundColor }}\r\n                >\r\n                  <Avatar>{person.username.charAt(0)}</Avatar>\r\n                  <div>\r\n                    <label className=\"userLabel\">{person.username}</label>\r\n                    <p style={{ fontSize: \"12px\", marginLeft: \"1rem\" }}>\r\n                      Click here to view {person.username} messages\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"loginBox\">\r\n          <div style={{ fontWeight: \"600\", fontSize: \"18px\" }}>\r\n            Log into your account\r\n          </div>\r\n          <input\r\n            className=\"login_input\"\r\n            placeholder=\"Username\"\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          ></input>\r\n          <input\r\n            className=\"login_input\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></input>\r\n          <div className=\"buttons\">\r\n            <button\r\n              className=\"login_button\"\r\n              onClick={() => signupPressed(username, password)}\r\n            >\r\n              Signup\r\n            </button>\r\n            <label>Or</label>\r\n            <button\r\n              className=\"login_button\"\r\n              onClick={() => loginPressed(username, password)}\r\n            >\r\n              Login\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default People;\r\n"],"sourceRoot":""}