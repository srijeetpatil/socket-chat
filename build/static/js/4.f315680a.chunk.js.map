{"version":3,"sources":["../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/core/esm/SvgIcon/SvgIcon.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/utils/createSvgIcon.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","components/SendButton.js","components/Chat.js"],"names":["makeStyles","stylesOrCreator","options","arguments","length","undefined","makeStylesWithoutDefault","_extends","defaultTheme","SvgIcon","React","props","ref","children","classes","className","_props$color","color","_props$component","component","Component","_props$fontSize","fontSize","htmlColor","titleAccess","_props$viewBox","viewBox","other","_objectWithoutProperties","clsx","root","concat","capitalize","focusable","role","muiName","withStyles","theme","userSelect","width","height","display","fill","flexShrink","typography","pxToRem","transition","transitions","create","duration","shorter","colorPrimary","palette","primary","main","colorSecondary","secondary","colorAction","action","active","colorError","error","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","name","createSvgIcon","path","displayName","createElement","memo","forwardRef","d","Avatar","alt","childrenProp","imgProps","sizes","src","srcSet","_props$variant","variant","loaded","_ref","_React$useState","setLoaded","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","position","alignItems","justifyContent","fontFamily","lineHeight","borderRadius","overflow","background","default","backgroundColor","type","grey","circle","circular","rounded","shape","square","textAlign","objectFit","textIndent","SendButton","version","xmlns","preserveAspectRatio","style","cursor","onClick","post","transform","stroke","useStyles","avatar","Chat","useEffect","a","getMessages","fetch","scrollToBottom","chat","document","getElementById","scrollHeight","scrollTop","charAt","marginLeft","id","messagesLoading","messages","map","message","i","sender","content","date","Date","time","hours","getHours","toString","minutes","getMinutes","user","marginTop","_id","CircularProgress","margin","onSubmit","e","preventDefault","autoComplete","placeholder"],"mappings":"kHAAA,4BAWeA,IAPf,SAAoBC,GAClB,IAAIC,EAAUC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAClF,OAAOG,YAAyBL,EAAiBM,YAAS,CACxDC,aAAcA,KACbN,M,mGCwDDO,EAAuBC,cAAiB,SAAiBC,EAAOC,GAClE,IAAIC,EAAWF,EAAME,SACjBC,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBC,EAAeL,EAAMM,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CE,EAAmBP,EAAMQ,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAkBV,EAAMW,SACxBA,OAA+B,IAApBD,EAA6B,UAAYA,EACpDE,EAAYZ,EAAMY,UAClBC,EAAcb,EAAMa,YACpBC,EAAiBd,EAAMe,QACvBA,OAA6B,IAAnBD,EAA4B,YAAcA,EACpDE,EAAQC,YAAyBjB,EAAO,CAAC,WAAY,UAAW,YAAa,QAAS,YAAa,WAAY,YAAa,cAAe,YAE/I,OAAoBD,gBAAoBU,EAAWb,YAAS,CAC1DQ,UAAWc,YAAKf,EAAQgB,KAAMf,EAAqB,YAAVE,GAAuBH,EAAQ,QAAQiB,OAAOC,YAAWf,KAAuB,YAAbK,GAA0BR,EAAQ,WAAWiB,OAAOC,YAAWV,MAC3KW,UAAW,QACXP,QAASA,EACTT,MAAOM,EACP,eAAeC,QAAcnB,EAC7B6B,KAAMV,EAAc,WAAQnB,EAC5BO,IAAKA,GACJe,GAAQd,EAAUW,EAA2Bd,gBAAoB,QAAS,KAAMc,GAAe,SAsEpGf,EAAQ0B,QAAU,UACHC,mBAxJK,SAAgBC,GAClC,MAAO,CAELP,KAAM,CACJQ,WAAY,OACZC,MAAO,MACPC,OAAQ,MACRC,QAAS,eACTC,KAAM,eACNC,WAAY,EACZrB,SAAUe,EAAMO,WAAWC,QAAQ,IACnCC,WAAYT,EAAMU,YAAYC,OAAO,OAAQ,CAC3CC,SAAUZ,EAAMU,YAAYE,SAASC,WAKzCC,aAAc,CACZlC,MAAOoB,EAAMe,QAAQC,QAAQC,MAI/BC,eAAgB,CACdtC,MAAOoB,EAAMe,QAAQI,UAAUF,MAIjCG,YAAa,CACXxC,MAAOoB,EAAMe,QAAQM,OAAOC,QAI9BC,WAAY,CACV3C,MAAOoB,EAAMe,QAAQS,MAAMP,MAI7BQ,cAAe,CACb7C,MAAOoB,EAAMe,QAAQM,OAAOK,UAI9BC,gBAAiB,CACf1C,SAAU,WAIZ2C,cAAe,CACb3C,SAAUe,EAAMO,WAAWC,QAAQ,KAIrCqB,cAAe,CACb5C,SAAUe,EAAMO,WAAWC,QAAQ,QAmGP,CAChCsB,KAAM,cADO/B,CAEZ3B,GC3JY2D,MCCA,SAAuBC,EAAMC,GAC1C,IAAIlD,EAAY,SAAmBT,EAAOC,GACxC,OAAoBF,IAAM6D,cAAc9D,EAASF,YAAS,CACxDK,IAAKA,GACJD,GAAQ0D,IAUb,OADAjD,EAAUe,QAAU1B,EAAQ0B,QACRzB,IAAM8D,KAAmB9D,IAAM+D,WAAWrD,IDfjDgD,CAA4B1D,gBAAoB,OAAQ,CACrEgE,EAAG,mHEwGL,IAAIC,EAAsBjE,cAAiB,SAAgBC,EAAOC,GAChE,IAAIgE,EAAMjE,EAAMiE,IACZC,EAAelE,EAAME,SACrBC,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBG,EAAmBP,EAAMQ,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClD4D,EAAWnE,EAAMmE,SACjBC,EAAQpE,EAAMoE,MACdC,EAAMrE,EAAMqE,IACZC,EAAStE,EAAMsE,OACfC,EAAiBvE,EAAMwE,QACvBA,OAA6B,IAAnBD,EAA4B,SAAWA,EACjDvD,EAAQC,YAAyBjB,EAAO,CAAC,MAAO,WAAY,UAAW,YAAa,YAAa,WAAY,QAAS,MAAO,SAAU,YAEvIE,EAAW,KAEXuE,EA3DN,SAAmBC,GACjB,IAAIL,EAAMK,EAAKL,IACXC,EAASI,EAAKJ,OAEdK,EAAkB5E,YAAe,GACjC0E,EAASE,EAAgB,GACzBC,EAAYD,EAAgB,GAiChC,OA/BA5E,aAAgB,WACd,GAAKsE,GAAQC,EAAb,CAIAM,GAAU,GACV,IAAI5B,GAAS,EACT6B,EAAQ,IAAIC,MAoBhB,OAnBAD,EAAMR,IAAMA,EACZQ,EAAMP,OAASA,EAEfO,EAAME,OAAS,WACR/B,GAIL4B,EAAU,WAGZC,EAAMG,QAAU,WACThC,GAIL4B,EAAU,UAGL,WACL5B,GAAS,MAEV,CAACqB,EAAKC,IACFG,EAoBMQ,CAAU,CACrBZ,IAAKA,EACLC,OAAQA,IAENY,EAASb,GAAOC,EAChBa,EAAmBD,GAAqB,UAAXT,EAoBjC,OAjBEvE,EADEiF,EACsBpF,gBAAoB,MAAOH,YAAS,CAC1DqE,IAAKA,EACLI,IAAKA,EACLC,OAAQA,EACRF,MAAOA,EACPhE,UAAWD,EAAQiF,KAClBjB,IACsB,MAAhBD,EACEA,EACFgB,GAAUjB,EACRA,EAAI,GAESlE,gBAAoBsF,EAAQ,CAClDjF,UAAWD,EAAQmF,WAIHvF,gBAAoBU,EAAWb,YAAS,CAC1DQ,UAAWc,YAAKf,EAAQgB,KAAMhB,EAAQoF,OAAQpF,EAAQqE,GAAUpE,GAAY+E,GAAoBhF,EAAQqF,cACxGvF,IAAKA,GACJe,GAAQd,MAkEEuB,iBAvNK,SAAgBC,GAClC,MAAO,CAELP,KAAM,CACJsE,SAAU,WACV3D,QAAS,OACT4D,WAAY,SACZC,eAAgB,SAChB3D,WAAY,EACZJ,MAAO,GACPC,OAAQ,GACR+D,WAAYlE,EAAMO,WAAW2D,WAC7BjF,SAAUe,EAAMO,WAAWC,QAAQ,IACnC2D,WAAY,EACZC,aAAc,MACdC,SAAU,SACVpE,WAAY,QAId6D,aAAc,CACZlF,MAAOoB,EAAMe,QAAQuD,WAAWC,QAChCC,gBAAwC,UAAvBxE,EAAMe,QAAQ0D,KAAmBzE,EAAMe,QAAQ2D,KAAK,KAAO1E,EAAMe,QAAQ2D,KAAK,MAIjGC,OAAQ,GAGRC,SAAU,GAGVC,QAAS,CACPT,aAAcpE,EAAM8E,MAAMV,cAI5BW,OAAQ,CACNX,aAAc,GAIhBV,IAAK,CACHxD,MAAO,OACPC,OAAQ,OACR6E,UAAW,SAEXC,UAAW,QAEXrG,MAAO,cAEPsG,WAAY,KAIdtB,SAAU,CACR1D,MAAO,MACPC,OAAQ,UA8JoB,CAChC2B,KAAM,aADO/B,CAEZuC,I,sHC9NY,SAAS6C,EAAW7G,GACjC,OACE,qBACE8G,QAAQ,MACRC,MAAM,6BACNnF,MAAM,OACNC,OAAO,OACPd,QAAQ,4BACRiG,oBAAoB,gBACpBC,MAAO,CAAEC,OAAQ,WACjBC,QAASnH,EAAMoH,KARjB,SAUE,oBACEC,UAAU,2DACVtF,KAAK,UACLuF,OAAO,OAHT,UAKE,sBACEvD,EAAE,odAQJ,sBACEA,EAAE,uICxBZ,IAAMwD,EAAYlI,aAAW,SAACqC,GAAD,MAAY,CACvC8F,OAAQ,CACNtB,gBAAiB,cAgGNuB,UA5Ff,SAAczH,GACZ,IAAMG,EAAUoH,IAEhBG,qBAAU,YACG,uCAAG,sBAAAC,EAAA,sEACN3H,EAAM4H,cADA,2CAAH,qDAGXC,GACAC,MACC,CAAC9H,EAAM+H,OAEV,IAAMD,EAAiB,WACrB,IAAIjG,EAASmG,SAASC,eAAe,iBAAiBC,aACtDF,SAASC,eAAe,iBAAiBE,UAAYtG,GAGvD,OACE,qCACE,sBAAKzB,UAAU,YAAf,UACE,cAAC4D,EAAA,EAAD,CAAQ5D,UAAWD,EAAQqH,OAA3B,SAAoCxH,EAAM+H,KAAKK,OAAO,KACtD,uBAAOnB,MAAO,CAAEoB,WAAY,QAA5B,SAAuCrI,EAAM+H,UAE/C,sBAAK3H,UAAU,SAASkI,GAAG,gBAA3B,WACItI,EAAMuI,iBACNvI,EAAMwI,SAASC,KAAI,SAACC,EAASC,GAC3B,IAKIC,EALAC,EAAUH,EAAQG,QAElBC,EAAO,IAAIC,KAAKL,EAAQM,MACxBC,EAAQH,EAAKI,WAAWC,WACxBC,EAAUN,EAAKO,aAAaF,WAIhC,OAFIC,EAAU,GAAK,IAAGA,EAAU,IAAMA,GACnB,WAAfpJ,EAAM+H,OAAmBa,EAASF,EAAQE,QAE5C,8BACGF,EAAQE,SAAW5I,EAAMsJ,KACxB,sBACElJ,UAAU,eAEV6G,MAAO,CAAEsC,UAbD,OAUV,UAKGV,EACD,sBAAKzI,UAAU,OAAf,UACG6I,EACA,IACAG,OAPEV,EAAQc,KAWf,sBACEpJ,UAAU,UAEV6G,MAAO,CAAEsC,UA1BD,OAuBV,UAKE,qBAAKnJ,UAAU,kBAAf,SAAkCwI,IACjCC,EACD,sBAAKzI,UAAU,OAAf,UACG6I,EACA,IACAG,OAREV,EAAQc,MAjBTb,MAgCf3I,EAAMuI,iBAAmBvI,EAAMsJ,MAC9B,cAACG,EAAA,EAAD,CAAkBxC,MAAO,CAAEyC,OAAQ,aAGtC1J,EAAMsJ,MACL,uBACElJ,UAAU,iBACVuJ,SAAU,SAACC,GACTA,EAAEC,iBACF7J,EAAMoH,QAER0C,aAAa,MANf,UAQE,uBACE1J,UAAU,cACV+F,KAAK,OACLmC,GAAG,YACHyB,YAAY,2BAEd,cAAClD,EAAD,CAAYO,KAAMpH,EAAMoH,KAAMjB,KAAK","file":"static/js/4.f315680a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      width: '1em',\n      height: '1em',\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0,\n      fontSize: theme.typography.pxToRem(24),\n      transition: theme.transitions.create('fill', {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(35)\n    }\n  };\n};\nvar SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'svg' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize,\n      htmlColor = props.htmlColor,\n      titleAccess = props.titleAccess,\n      _props$viewBox = props.viewBox,\n      viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, other), children, titleAccess ? /*#__PURE__*/React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   */\n  color: PropTypes.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['default', 'inherit', 'large', 'small']),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this property.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default withStyles(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = function Component(props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"circular\"`. */\n    circular: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'circular', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React from \"react\";\r\n\r\nexport default function SendButton(props) {\r\n  return (\r\n    <svg\r\n      version=\"1.0\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"2rem\"\r\n      height=\"2rem\"\r\n      viewBox=\"0 0 512.000000 512.000000\"\r\n      preserveAspectRatio=\"xMidYMid meet\"\r\n      style={{ cursor: \"pointer\" }}\r\n      onClick={props.post}\r\n    >\r\n      <g\r\n        transform=\"translate(0.000000,512.000000) scale(0.100000,-0.100000)\"\r\n        fill=\"#494146\"\r\n        stroke=\"none\"\r\n      >\r\n        <path\r\n          d=\"M4828 5071 c-51 -27 -606 -316 -1233 -644 -627 -327 -1675 -875\r\n-2330 -1216 -654 -342 -1200 -632 -1213 -644 -30 -27 -52 -77 -52 -117 0 -40\r\n34 -105 64 -125 35 -23 1367 -477 1382 -471 7 3 199 164 426 358 227 195 850\r\n727 1383 1182 534 456 981 838 995 850 l24 21 -24 -30 c-14 -17 -504 -608\r\n-1090 -1314 -586 -705 -1066 -1286 -1068 -1289 -1 -6 2146 -745 2255 -777 51\r\n-14 139 30 167 83 20 39 610 4015 602 4057 -8 43 -50 94 -93 111 -57 24 -96\r\n17 -195 -35z\"\r\n        />\r\n        <path\r\n          d=\"M1870 845 c0 -561 -1 -549 56 -594 66 -52 155 -47 211 11 40 43 596\r\n799 590 804 -4 4 -845 294 -853 294 -2 0 -4 -232 -4 -515z\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport \"../App.css\";\r\nimport { Avatar, makeStyles, CircularProgress } from \"@material-ui/core\";\r\nimport SendButton from \"./SendButton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    backgroundColor: \"orange\",\r\n  },\r\n}));\r\n\r\nfunction Chat(props) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      await props.getMessages();\r\n    };\r\n    fetch();\r\n    scrollToBottom();\r\n  }, [props.chat]);\r\n\r\n  const scrollToBottom = () => {\r\n    var height = document.getElementById(\"window-scroll\").scrollHeight;\r\n    document.getElementById(\"window-scroll\").scrollTop = height;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chatTitle\">\r\n        <Avatar className={classes.avatar}>{props.chat.charAt(0)}</Avatar>\r\n        <label style={{ marginLeft: \"1rem\" }}>{props.chat}</label>\r\n      </div>\r\n      <div className=\"window\" id=\"window-scroll\">\r\n        {!props.messagesLoading &&\r\n          props.messages.map((message, i) => {\r\n            let content = message.content;\r\n            let marginTop = \"0px\";\r\n            let date = new Date(message.time);\r\n            let hours = date.getHours().toString();\r\n            let minutes = date.getMinutes().toString();\r\n            let sender;\r\n            if (minutes / 10 < 1) minutes = \"0\" + minutes;\r\n            if (props.chat === \"Global\") sender = message.sender;\r\n            return (\r\n              <div key={i}>\r\n                {message.sender === props.user ? (\r\n                  <div\r\n                    className=\"message_mine\"\r\n                    key={message._id}\r\n                    style={{ marginTop: marginTop }}\r\n                  >\r\n                    {content}\r\n                    <div className=\"time\">\r\n                      {hours}\r\n                      {\":\"}\r\n                      {minutes}\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    className=\"message\"\r\n                    key={message._id}\r\n                    style={{ marginTop: marginTop }}\r\n                  >\r\n                    <div className=\"messageUsername\">{sender}</div>\r\n                    {content}\r\n                    <div className=\"time\">\r\n                      {hours}\r\n                      {\":\"}\r\n                      {minutes}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        {props.messagesLoading && props.user && (\r\n          <CircularProgress style={{ margin: \"auto\" }} />\r\n        )}\r\n      </div>\r\n      {props.user && (\r\n        <form\r\n          className=\"editMessagebox\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            props.post();\r\n          }}\r\n          autoComplete=\"off\"\r\n        >\r\n          <input\r\n            className=\"editMessage\"\r\n            type=\"text\"\r\n            id=\"text-edit\"\r\n            placeholder=\"Type your message here\"\r\n          ></input>\r\n          <SendButton post={props.post} type=\"submit\" />\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"sourceRoot":""}